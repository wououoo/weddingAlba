plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'wedding'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Kafka 의존성
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// Redis 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// JWT 토큰 관련 의존성 (세션 대신 사용할 경우)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// DB 관련 의존성
	implementation 'org.postgresql:postgresql'

	// 캐시 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// 유틸리티 라이브러리
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.google.guava:guava:31.1-jre'

	// OAuth2 클라이언트 의존성
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// MapStruct 의존성
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	// 개발 도구 및 테스트 의존성
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Annotation Processors (순서 중요!)
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}