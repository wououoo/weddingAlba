spring:
  application:
    name: wedding-service
  
  profiles:
    include: file  # file 프로필 포함

  # Redis 설정
  redis:
    host: localhost
    port: 6379
    # password: your-password  # 비밀번호가 설정된 경우 주석 해제
    timeout: 3000

  # PostgreSQL 데이터베이스 설정
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: asd25825@@
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      connection-init-sql: SET NAMES 'UTF8'

  # JPA/Hibernate 설정
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      ddl-auto: create  # 기존 데이터 유지하면서 새로 생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        connection:
          charSet: UTF-8
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        # PostgreSQL 호환성 개선
        globally_quoted_identifiers: false
        jdbc:
          lob:
            non_contextual_creation: true

  # OAuth2 설정
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: e74c96df204c836ad89c9edd38c8dd80
            client-secret: SZsrQGv7QrJgPx4HMKbbJ30jt7Bbi1LY
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# JWT 설정
jwt:
  secret: ${JWT_SECRET:wedding-service-jwt-secret-key-which-needs-to-be-at-least-32-bytes-long}
  token-validity-in-seconds: 86400 # 24시간
  refresh-token-validity-in-seconds: 604800 # 7일

# 네이버 지도 API 설정
naver:
  map:
    client-id: ${NAVER_MAP_CLIENT_ID:your_naver_client_id_here}
    client-secret: ${NAVER_MAP_CLIENT_SECRET:your_naver_client_secret_here}

# 애플리케이션 커스텀 설정
app:
  cors:
    allowed-origins: "http://localhost:3000"  # React 프론트엔드 URL
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    max-age: 3600

  oauth2:
    # 프론트엔드 리다이렉트 URL 수정
    redirect-uri: "http://localhost:3000/oauth2/redirect"

# 서버 설정
server:
  port: 8080
  tomcat:
    relaxed-query-chars: 
      - '['
      - ']'
  error:
    include-message: always
    include-binding-errors: always

# 로깅 설정
logging:
  level:
    root: INFO
    wedding: DEBUG
    org.springframework.web: INFO
    org.springframework.data: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    org.hibernate.SQL: DEBUG